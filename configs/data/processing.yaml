hydra:
  run:
    dir: data/processed/mimic3/plain #output dir

variables:
  concept_processing:
    grouping:
      _target_: __main__.process_base.ValueProcessing.group_rare_values
      _recursive_: false 
    no_grouping:
      _target_: __main__.process_base.ValueProcessing.value_process_identity
      _recursive_: false 
  value_processing:
    identity: __main__.process_base.ValueProcessing.value_process_identity
    binning: __main__.process_base.ValueProcessing.value_process_binning
    binning_methods: 
        sqr: __main__.process_base.BinningMethods.square_root_binning
    no_binning:
      _target_: __main__.process_base.ValueProcessing.value_process_identity
      _recursive_: false 

data_path: C:\Users\fjn197\PhD\projects\PHAIR\pipelines\ehr_preprocess\data\processed\mimic-iii-clinical-database-1.4
# out_dir: mimic3\plain





include:
  - PatientInfo
  # - Weights
  # - Transfers
  - Diagnoses
  - Procedures
  # - Medications
  # - LabEvents
  # - ChartEvents
processor:
  _target_: __main__.process_mimic.MIMIC3Processor
  _recursive_: false


# table-specific
patients_info:
  group_rare_values: 
    _target_: __main__.process_base.ValueProcessing.group_rare_values
    _recursive_: false
    cols: ['INSURANCE', 'LANGUAGE', 'RELIGION', 'MARITAL_STATUS', 'ETHNICITY']
    rare_threshold: 10 # 10 by default

weight:
  drop_constant: true # drop unchanging measurements
transfers:
  group_rare_values: ${variables.concept_processing.no_grouping}
diag:
  group_rare_values: ${variables.concept_processing.no_grouping}
pro:
  group_rare_values: ${variables.concept_processing.no_grouping}
med:
  group_rare_values: ${variables.concept_processing.no_grouping}
lab:
  group_rare_values: ${variables.concept_processing.no_grouping}
chartevents:
  group_rare_values: ${variables.concept_processing.no_grouping}


# General
value_processing: 
  _target_: ${variables.value_processing.identity}
  _recursive_: false
  binning_method: 
    _target_: ${variables.value_processing.binning_methods.sqr}
    _recursive_: false
  min_events: 0 # minimum number of events in a bin, to get a token assigned
  
